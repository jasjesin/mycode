kubectl get nodes

[] How to add a worker to a Ctrl Plane:
1. Boot a new node & install docker
2. Open firewall
3. Set memory swapoff
4. Add the following line to /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
          Environment="cgroup-driver=systemd/crgoup-driver=cgroupfs"
5. Comment out line in container.d
6. Execute Join command

URL used for practice: https://www.containiq.com/post/kubectl-cheat-sheet


kubectl api-versions #<-- shows API version for each component in ctrl plane
kubectl cluster-info #<-- shows URLs for ctrl plane n coreDNS
kubectl cluster-info dump



jasdil@Jasdils-Air Docker % kubectl api-versions #<-- lists each component's api version

admissionregistration.k8s.io/v1
apiextensions.k8s.io/v1
apiregistration.k8s.io/v1
apps/v1
authentication.k8s.io/v1
authorization.k8s.io/v1
autoscaling/v1
autoscaling/v2
autoscaling/v2beta2
batch/v1
certificates.k8s.io/v1
coordination.k8s.io/v1
discovery.k8s.io/v1
events.k8s.io/v1
flowcontrol.apiserver.k8s.io/v1beta1
flowcontrol.apiserver.k8s.io/v1beta2
networking.k8s.io/v1
node.k8s.io/v1
policy/v1
rbac.authorization.k8s.io/v1
scheduling.k8s.io/v1
storage.k8s.io/v1
storage.k8s.io/v1beta1
v1

jasdil@Jasdils-Air Docker % kubectl cluster-info #<-- gives URLs for k8s n coreDNS
Kubernetes control plane is running at https://kubernetes.docker.internal:6443
CoreDNS is running at https://kubernetes.docker.internal:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
jasdil@Jasdils-Air Docker %

jasdil@Jasdils-Air Docker % kubectl run pod1 --image=nginx  #<-- create pod frm CLI
pod/pod1 created
jasdil@Jasdils-Air Docker % kubectl get pods #<-- lists pods
NAME   READY   STATUS              RESTARTS   AGE
pod1   0/1     ContainerCreating   0          8s

jasdil@Jasdils-Air Docker % kubectl get pods
NAME   READY   STATUS    RESTARTS   AGE
pod1   1/1     Running   0          20s

jasdil@Jasdils-Air Docker % kubectl describe pod --pretty pod1 #<-- pretty format doesnt works in k8s, unlike in swarm
error: unknown flag: --pretty
See 'kubectl describe --help' for usage.

jasdil@Jasdils-Air Docker % kubectl describe pod pod1 #<-- details abt pod, similar to inspect
Name:             pod1
Namespace:        default
Priority:         0
Service Account:  default
Node:             docker-desktop/192.168.65.4
Start Time:       Mon, 26 Dec 2022 07:20:10 -0800
Labels:           run=pod1
Annotations:      <none>
Status:           Running
IP:               10.1.0.6
IPs:
  IP:  10.1.0.6
Containers:
  pod1:
    Container ID:   docker://29b98d534bb8a90f9095ca8f5630f0c1533bad49604133a9dc1a9bb56ebed712
    Image:          nginx
    Image ID:       docker-pullable://nginx@sha256:0047b729188a15da49380d9506d65959cce6d40291ccfb4e039f5dc7efd33286
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Mon, 26 Dec 2022 07:20:23 -0800
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-69brb (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             True
  ContainersReady   True
  PodScheduled      True
Volumes:
  kube-api-access-69brb:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From               Message
  ----    ------     ----  ----               -------
  Normal  Scheduled  50s   default-scheduler  Successfully assigned default/pod1 to docker-desktop
  Normal  Pulling    48s   kubelet            Pulling image "nginx"
  Normal  Pulled     38s   kubelet            Successfully pulled image "nginx" in 10.303080114s
  Normal  Created    37s   kubelet            Created container pod1
  Normal  Started    37s   kubelet            Started container pod1
jasdil@Jasdils-Air Docker %

jasdil@Jasdils-Air k8s % cat first.yaml #<-- definition of containers in pod
apiVersion: v1
kind: Pod
metadata:
  name: webserver
spec:
  containers:
    - name: nginx
      image: nginx:latest
      ports:
      - containerPort: 81
    - name: nginx1
      image: nginx:alpine
      ports:
      - containerPort: 82
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl apply -f first.yaml
The Pod "webserver" is invalid: spec.containers[1].name: Duplicate value: "nginx"

jasdil@Jasdils-Air k8s % vim first.yaml

jasdil@Jasdils-Air k8s % kubectl apply -f first.yaml #<-- creation of pod using yaml file, similar to docker-compose
pod/webserver created

jasdil@Jasdils-Air k8s % kubctl get pods
zsh: command not found: kubctl

jasdil@Jasdils-Air k8s % kubectl get pods
NAME        READY   STATUS    RESTARTS     AGE
pod1        1/1     Running   0            7m3s
webserver   1/2     Error     1 (9s ago)   15s

jasdil@Jasdils-Air k8s % kubectl get pods
NAME        READY   STATUS    RESTARTS      AGE
pod1        1/1     Running   0             7m44s
webserver   1/2     Error     3 (29s ago)   56s

jasdil@Jasdils-Air k8s % kubectl describe pods webserver
Name:             webserver
Namespace:        default
Priority:         0
Service Account:  default
Node:             docker-desktop/192.168.65.4
Start Time:       Mon, 26 Dec 2022 07:26:59 -0800
Labels:           <none>
Annotations:      <none>
Status:           Running
IP:               10.1.0.7
IPs:
  IP:  10.1.0.7
Containers:
  nginx:
    Container ID:   docker://b3ce0e0f84239df3270f8a0266677d68b82447c231201febee0e713e984690c7
    Image:          nginx:latest
    Image ID:       docker-pullable://nginx@sha256:0047b729188a15da49380d9506d65959cce6d40291ccfb4e039f5dc7efd33286
    Port:           81/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Mon, 26 Dec 2022 07:27:00 -0800
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-w272j (ro)
  nginx1:
    Container ID:   docker://6e0ad0091110f45907e91190299a904c94838fd469ddc0bebf8a4601fd789541
    Image:          nginx:alpine
    Image ID:       docker-pullable://nginx@sha256:dd8a054d7ef030e94a6449783605d6c306c1f69c10c2fa06b66a030e0d1db793
    Port:           82/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       CrashLoopBackOff
    Last State:     Terminated
      Reason:       Error
      Exit Code:    1
      Started:      Mon, 26 Dec 2022 07:27:50 -0800
      Finished:     Mon, 26 Dec 2022 07:27:53 -0800
    Ready:          False
    Restart Count:  3
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-w272j (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             False
  ContainersReady   False
  PodScheduled      True
Volumes:
  kube-api-access-w272j:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                From               Message
  ----     ------     ----               ----               -------
  Normal   Scheduled  68s                default-scheduler  Successfully assigned default/webserver to docker-desktop
  Normal   Pulling    68s                kubelet            Pulling image "nginx:latest"
  Normal   Pulled     67s                kubelet            Successfully pulled image "nginx:latest" in 986.585088ms
  Normal   Created    67s                kubelet            Created container nginx
  Normal   Started    67s                kubelet            Started container nginx
  Normal   Pulling    67s                kubelet            Pulling image "nginx:alpine"
  Normal   Pulled     66s                kubelet            Successfully pulled image "nginx:alpine" in 892.861601ms
  Normal   Created    17s (x4 over 66s)  kubelet            Created container nginx1
  Normal   Started    17s (x4 over 66s)  kubelet            Started container nginx1
  Normal   Pulled     17s (x3 over 62s)  kubelet            Container image "nginx:alpine" already present on machine
  Warning  BackOff    3s (x5 over 59s)   kubelet            Back-off restarting failed container
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl stop pod webserver
error: unknown command "stop" for "kubectl"

Did you mean this?
	top

jasdil@Jasdils-Air k8s % kubectl rm pod webserver
error: unknown command "rm" for "kubectl"

Did you mean this?
	run
	delete
	cp

jasdil@Jasdils-Air k8s % kubectl pods stop webserver
error: unknown command "pods" for "kubectl"

Did you mean this?
	logs

jasdil@Jasdils-Air k8s % kubectl pods rm webserver
error: unknown command "pods" for "kubectl"

Did you mean this?
	logs

jasdil@Jasdils-Air k8s % kubectl rm pods webserver
error: unknown command "rm" for "kubectl"

Did you mean this?
	run
	delete
	cp

jasdil@Jasdils-Air k8s % kubectl delete pods webserver #<-- to delete a pod
pod "webserver" deleted
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl get pods
NAME   READY   STATUS    RESTARTS   AGE
pod1   1/1     Running   0          11m

jasdil@Jasdils-Air k8s % kubectl apply -f first.yaml
pod/webserver created

jasdil@Jasdils-Air k8s % kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
pod1        1/1     Running   0          12m
webserver   2/2     Running   0          3s

jasdil@Jasdils-Air k8s % kubectl get pods
NAME        READY   STATUS    RESTARTS      AGE
pod1        1/1     Running   0             13m
webserver   2/2     Running   4 (49s ago)   100s

jasdil@Jasdils-Air k8s % kubectl get pods
NAME        READY   STATUS             RESTARTS      AGE
pod1        1/1     Running            0             14m
webserver   1/2     CrashLoopBackOff   4 (54s ago)   2m35s

jasdil@Jasdils-Air k8s % kubectl describe webserver
error: the server doesn't have a resource type "webserver"

jasdil@Jasdils-Air k8s % kubectl pods describe webserver
error: unknown command "pods" for "kubectl"

Did you mean this?
	logs

jasdil@Jasdils-Air k8s % kubectl describe pods webserver
Name:             webserver
Namespace:        default
Priority:         0
Service Account:  default
Node:             docker-desktop/192.168.65.4
Start Time:       Mon, 26 Dec 2022 07:32:07 -0800
Labels:           <none>
Annotations:      <none>
Status:           Running
IP:               10.1.0.8
IPs:
  IP:  10.1.0.8
Containers:
  nginx:
    Container ID:   docker://96d3048d4a8570a66b7c874f0a9b2a7e572446bb2a4006becf39a20835b452d1
    Image:          nginx:latest
    Image ID:       docker-pullable://nginx@sha256:0047b729188a15da49380d9506d65959cce6d40291ccfb4e039f5dc7efd33286
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Mon, 26 Dec 2022 07:32:09 -0800
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qb9gq (ro)
  nginx1:
    Container ID:   docker://62daada2852bae931c311e3ff1a39db4157e8092c96d1d1cb60253cf71715401
    Image:          nginx:alpine
    Image ID:       docker-pullable://nginx@sha256:dd8a054d7ef030e94a6449783605d6c306c1f69c10c2fa06b66a030e0d1db793
    Port:           8180/TCP
    Host Port:      0/TCP
    State:          Waiting
      Reason:       CrashLoopBackOff
    Last State:     Terminated
      Reason:       Error
      Exit Code:    1
      Started:      Mon, 26 Dec 2022 07:33:46 -0800
      Finished:     Mon, 26 Dec 2022 07:33:48 -0800
    Ready:          False
    Restart Count:  4
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qb9gq (ro)
Conditions:
  Type              Status
  Initialized       True
  Ready             False
  ContainersReady   False
  PodScheduled      True
Volumes:
  kube-api-access-qb9gq:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type     Reason     Age                   From               Message
  ----     ------     ----                  ----               -------
  Normal   Scheduled  3m3s                  default-scheduler  Successfully assigned default/webserver to docker-desktop
  Normal   Pulling    3m2s                  kubelet            Pulling image "nginx:latest"
  Normal   Pulled     3m1s                  kubelet            Successfully pulled image "nginx:latest" in 960.887571ms
  Normal   Created    3m1s                  kubelet            Created container nginx
  Normal   Started    3m1s                  kubelet            Started container nginx
  Normal   Started    2m15s (x4 over 3m1s)  kubelet            Started container nginx1
  Warning  BackOff    95s (x7 over 2m54s)   kubelet            Back-off restarting failed container
  Normal   Pulled     84s (x5 over 3m1s)    kubelet            Container image "nginx:alpine" already present on machine
  Normal   Created    84s (x5 over 3m1s)    kubelet            Created container nginx1
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl describe nodes docker-desktop #<-- details abt node n pods running on it
Name:               docker-desktop
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=docker-desktop
                    kubernetes.io/os=linux
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Mon, 26 Dec 2022 07:14:33 -0800
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  docker-desktop
  AcquireTime:     <unset>
  RenewTime:       Mon, 26 Dec 2022 08:55:03 -0800
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Mon, 26 Dec 2022 08:54:36 -0800   Mon, 26 Dec 2022 07:14:25 -0800   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Mon, 26 Dec 2022 08:54:36 -0800   Mon, 26 Dec 2022 07:14:25 -0800   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Mon, 26 Dec 2022 08:54:36 -0800   Mon, 26 Dec 2022 07:14:25 -0800   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Mon, 26 Dec 2022 08:54:36 -0800   Mon, 26 Dec 2022 07:14:34 -0800   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.65.4
  Hostname:    docker-desktop
Capacity:
  cpu:                4
  ephemeral-storage:  61202244Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             4027864Ki
  pods:               110
Allocatable:
  cpu:                4
  ephemeral-storage:  56403987978
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             3925464Ki
  pods:               110
System Info:
  Machine ID:                 5d61e551-95db-4529-9e52-ab7a197d5b4e
  System UUID:                c4d14a06-0000-0000-90f7-b3118f62b193
  Boot ID:                    194bf249-6950-439d-8f21-f4e09119d582
  Kernel Version:             5.15.49-linuxkit
  OS Image:                   Docker Desktop
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://20.10.21
  Kubelet Version:            v1.25.2
  Kube-Proxy Version:         v1.25.2
Non-terminated Pods:          (12 in total)
  Namespace                   Name                                      CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                      ------------  ----------  ---------------  -------------  ---
  default                     pod1                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         94m
  default                     webserver                                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         66m
  default                     webserver2-79676b6c-8gdvr                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         51m
  kube-system                 coredns-95db45d46-bqwhp                   100m (2%)     0 (0%)      70Mi (1%)        170Mi (4%)     100m
  kube-system                 coredns-95db45d46-jnln4                   100m (2%)     0 (0%)      70Mi (1%)        170Mi (4%)     100m
  kube-system                 etcd-docker-desktop                       100m (2%)     0 (0%)      100Mi (2%)       0 (0%)         100m
  kube-system                 kube-apiserver-docker-desktop             250m (6%)     0 (0%)      0 (0%)           0 (0%)         100m
  kube-system                 kube-controller-manager-docker-desktop    200m (5%)     0 (0%)      0 (0%)           0 (0%)         99m
  kube-system                 kube-proxy-xnxqx                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         100m
  kube-system                 kube-scheduler-docker-desktop             100m (2%)     0 (0%)      0 (0%)           0 (0%)         100m
  kube-system                 storage-provisioner                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         100m
  kube-system                 vpnkit-controller                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         100m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                850m (21%)  0 (0%)
  memory             240Mi (6%)  340Mi (8%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-1Gi      0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:              <none>
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl api-resources #<-- description of api resources wid short names, api version, type n ns
NAME                              SHORTNAMES   APIVERSION                             NAMESPACED   KIND
bindings                                       v1                                     true         Binding
componentstatuses                 cs           v1                                     false        ComponentStatus
configmaps                        cm           v1                                     true         ConfigMap
endpoints                         ep           v1                                     true         Endpoints
events                            ev           v1                                     true         Event
limitranges                       limits       v1                                     true         LimitRange
namespaces                        ns           v1                                     false        Namespace
nodes                             no           v1                                     false        Node
persistentvolumeclaims            pvc          v1                                     true         PersistentVolumeClaim
persistentvolumes                 pv           v1                                     false        PersistentVolume
pods                              po           v1                                     true         Pod
podtemplates                                   v1                                     true         PodTemplate
replicationcontrollers            rc           v1                                     true         ReplicationController
resourcequotas                    quota        v1                                     true         ResourceQuota
secrets                                        v1                                     true         Secret
serviceaccounts                   sa           v1                                     true         ServiceAccount
services                          svc          v1                                     true         Service
mutatingwebhookconfigurations                  admissionregistration.k8s.io/v1        false        MutatingWebhookConfiguration
validatingwebhookconfigurations                admissionregistration.k8s.io/v1        false        ValidatingWebhookConfiguration
customresourcedefinitions         crd,crds     apiextensions.k8s.io/v1                false        CustomResourceDefinition
apiservices                                    apiregistration.k8s.io/v1              false        APIService
controllerrevisions                            apps/v1                                true         ControllerRevision
daemonsets                        ds           apps/v1                                true         DaemonSet
deployments                       deploy       apps/v1                                true         Deployment
replicasets                       rs           apps/v1                                true         ReplicaSet
statefulsets                      sts          apps/v1                                true         StatefulSet
tokenreviews                                   authentication.k8s.io/v1               false        TokenReview
localsubjectaccessreviews                      authorization.k8s.io/v1                true         LocalSubjectAccessReview
selfsubjectaccessreviews                       authorization.k8s.io/v1                false        SelfSubjectAccessReview
selfsubjectrulesreviews                        authorization.k8s.io/v1                false        SelfSubjectRulesReview
subjectaccessreviews                           authorization.k8s.io/v1                false        SubjectAccessReview
horizontalpodautoscalers          hpa          autoscaling/v2                         true         HorizontalPodAutoscaler
cronjobs                          cj           batch/v1                               true         CronJob
jobs                                           batch/v1                               true         Job
certificatesigningrequests        csr          certificates.k8s.io/v1                 false        CertificateSigningRequest
leases                                         coordination.k8s.io/v1                 true         Lease
endpointslices                                 discovery.k8s.io/v1                    true         EndpointSlice
events                            ev           events.k8s.io/v1                       true         Event
flowschemas                                    flowcontrol.apiserver.k8s.io/v1beta2   false        FlowSchema
prioritylevelconfigurations                    flowcontrol.apiserver.k8s.io/v1beta2   false        PriorityLevelConfiguration
ingressclasses                                 networking.k8s.io/v1                   false        IngressClass
ingresses                         ing          networking.k8s.io/v1                   true         Ingress
networkpolicies                   netpol       networking.k8s.io/v1                   true         NetworkPolicy
runtimeclasses                                 node.k8s.io/v1                         false        RuntimeClass
poddisruptionbudgets              pdb          policy/v1                              true         PodDisruptionBudget
clusterrolebindings                            rbac.authorization.k8s.io/v1           false        ClusterRoleBinding
clusterroles                                   rbac.authorization.k8s.io/v1           false        ClusterRole
rolebindings                                   rbac.authorization.k8s.io/v1           true         RoleBinding
roles                                          rbac.authorization.k8s.io/v1           true         Role
priorityclasses                   pc           scheduling.k8s.io/v1                   false        PriorityClass
csidrivers                                     storage.k8s.io/v1                      false        CSIDriver
csinodes                                       storage.k8s.io/v1                      false        CSINode
csistoragecapacities                           storage.k8s.io/v1                      true         CSIStorageCapacity
storageclasses                    sc           storage.k8s.io/v1                      false        StorageClass
volumeattachments                              storage.k8s.io/v1                      false        VolumeAttachment
jasdil@Jasdils-Air k8s %


jasdil@Jasdils-Air k8s % kubectl get services #<-- provides details abt default namespace
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   23m

jasdil@Jasdils-Air k8s % kubectl get services --all-namespaces #<-- provides details abt all namespace
NAMESPACE     NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE
default       kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP                  24m
kube-system   kube-dns     ClusterIP   10.96.0.10   <none>        53/UDP,53/TCP,9153/TCP   24m
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air Docker % kubectl get pods --all-namespaces #<-- details abt all pods in all namespaces
NAMESPACE     NAME                                     READY   STATUS    RESTARTS   AGE
kube-system   coredns-95db45d46-bqwhp                  1/1     Running   0          4m37s
kube-system   coredns-95db45d46-jnln4                  1/1     Running   0          4m37s
kube-system   etcd-docker-desktop                      1/1     Running   0          4m42s
kube-system   kube-apiserver-docker-desktop            1/1     Running   0          4m40s
kube-system   kube-controller-manager-docker-desktop   1/1     Running   0          3m37s
kube-system   kube-proxy-xnxqx                         1/1     Running   0          4m37s
kube-system   kube-scheduler-docker-desktop            1/1     Running   0          4m40s
kube-system   storage-provisioner                      1/1     Running   0          4m29s
kube-system   vpnkit-controller                        1/1     Running   0          4m28s
jasdil@Jasdils-Air Docker %

jasdil@Jasdils-Air k8s % kubectl logs -f pod1 #<-- chk logs of a specific pod
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2022/12/26 15:20:23 [notice] 1#1: using the "epoll" event method
2022/12/26 15:20:23 [notice] 1#1: nginx/1.23.3
2022/12/26 15:20:23 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6)
2022/12/26 15:20:23 [notice] 1#1: OS: Linux 5.15.49-linuxkit
2022/12/26 15:20:23 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2022/12/26 15:20:23 [notice] 1#1: start worker processes
2022/12/26 15:20:23 [notice] 1#1: start worker process 29
2022/12/26 15:20:23 [notice] 1#1: start worker process 30
2022/12/26 15:20:23 [notice] 1#1: start worker process 31
2022/12/26 15:20:23 [notice] 1#1: start worker process 32
^C
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl get events #<-- details abt sequence of events happened on a pod, kind of audit trail
LAST SEEN   TYPE      REASON                    OBJECT                MESSAGE
32m         Normal    NodeHasSufficientMemory   node/docker-desktop   Node docker-desktop status is now: NodeHasSufficientMemory
32m         Normal    NodeHasNoDiskPressure     node/docker-desktop   Node docker-desktop status is now: NodeHasNoDiskPressure
32m         Normal    NodeHasSufficientPID      node/docker-desktop   Node docker-desktop status is now: NodeHasSufficientPID
32m         Normal    RegisteredNode            node/docker-desktop   Node docker-desktop event: Registered Node docker-desktop in Controller
31m         Normal    Starting                  node/docker-desktop
26m         Normal    Scheduled                 pod/pod1              Successfully assigned default/pod1 to docker-desktop
26m         Normal    Pulling                   pod/pod1              Pulling image "nginx"
26m         Normal    Pulled                    pod/pod1              Successfully pulled image "nginx" in 10.303080114s
26m         Normal    Created                   pod/pod1              Created container pod1
26m         Normal    Started                   pod/pod1              Started container pod1
19m         Normal    Scheduled                 pod/webserver         Successfully assigned default/webserver to docker-desktop
19m         Normal    Pulling                   pod/webserver         Pulling image "nginx:latest"
19m         Normal    Pulled                    pod/webserver         Successfully pulled image "nginx:latest" in 986.585088ms
19m         Normal    Created                   pod/webserver         Created container nginx
19m         Normal    Started                   pod/webserver         Started container nginx
19m         Normal    Pulling                   pod/webserver         Pulling image "nginx:alpine"
19m         Normal    Pulled                    pod/webserver         Successfully pulled image "nginx:alpine" in 892.861601ms
18m         Normal    Created                   pod/webserver         Created container nginx1
18m         Normal    Started                   pod/webserver         Started container nginx1
18m         Normal    Pulled                    pod/webserver         Container image "nginx:alpine" already present on machine
18m         Warning   BackOff                   pod/webserver         Back-off restarting failed container
14m         Normal    Scheduled                 pod/webserver         Successfully assigned default/webserver to docker-desktop
14m         Normal    Pulling                   pod/webserver         Pulling image "nginx:latest"
14m         Normal    Pulled                    pod/webserver         Successfully pulled image "nginx:latest" in 960.887571ms
14m         Normal    Created                   pod/webserver         Created container nginx
14m         Normal    Started                   pod/webserver         Started container nginx
12m         Normal    Pulled                    pod/webserver         Container image "nginx:alpine" already present on machine
12m         Normal    Created                   pod/webserver         Created container nginx1
13m         Normal    Started                   pod/webserver         Started container nginx1
4m38s       Warning   BackOff                   pod/webserver         Back-off restarting failed container
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl apply -f first.yaml
pod/webserver created

jasdil@Jasdils-Air k8s % kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
pod1        1/1     Running   0          28m
webserver   1/1     Running   0          14s

jasdil@Jasdils-Air k8s % kubectl get pods
NAME        READY   STATUS    RESTARTS   AGE
pod1        1/1     Running   0          28m
webserver   1/1     Running   0          27s

jasdil@Jasdils-Air k8s % kubectl describe webserver
error: the server doesn't have a resource type "webserver"

jasdil@Jasdils-Air k8s % kubectl get pods -o wide #<-- lists which pod runs on which node
NAME        READY   STATUS    RESTARTS   AGE   IP         NODE             NOMINATED NODE   READINESS GATES
pod1        1/1     Running   0          29m   10.1.0.6   docker-desktop   <none>           <none>
webserver   1/1     Running   0          74s   10.1.0.9   docker-desktop   <none>           <none>
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl get pods --field-selector=spec.nodeName=docker-desktop #<-- filter output
NAME        READY   STATUS    RESTARTS   AGE
pod1        1/1     Running   0          30m
webserver   1/1     Running   0          2m14s
jasdil@Jasdils-Air k8s %

kubectl delete pods --all #<-- deletes all pods

jasdil@Jasdils-Air k8s % kubectl exec -ti webserver -- /bin/bash #<-- to get into pod
OCI runtime exec failed: exec failed: unable to start container process: exec: "/bin/bash": stat /bin/bash: no such file or directory: unknown
command terminated with exit code 126

jasdil@Jasdils-Air k8s % kubectl exec -ti pod1 -- /bin/bash #<-- to get into pod
root@pod1:/# ls
bin  boot  dev	docker-entrypoint.d  docker-entrypoint.sh  etc	home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@pod1:/#
exit

jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl config view #<-- provides config details
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://kubernetes.docker.internal:6443
  name: docker-desktop
contexts:
- context:
    cluster: docker-desktop
    user: docker-desktop
  name: docker-desktop
current-context: docker-desktop
kind: Config
preferences: {}
users:
- name: docker-desktop
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED
jasdil@Jasdils-Air k8s % kubectl config current-context
docker-desktop
jasdil@Jasdils-Air k8s % kubectl config
Modify kubeconfig files using subcommands like "kubectl config set current-context my-context"

 The loading order follows these rules:

  1.  If the --kubeconfig flag is set, then only that file is loaded. The flag may only be set once and no merging takes
place.
  2.  If $KUBECONFIG environment variable is set, then it is used as a list of paths (normal path delimiting rules for
your system). These paths are merged. When a value is modified, it is modified in the file that defines the stanza. When
a value is created, it is created in the first file that exists. If no files in the chain exist, then it creates the
last file in the list.
  3.  Otherwise, ${HOME}/.kube/config is used and no merging takes place.

Available Commands:
  current-context   Display the current-context
  delete-cluster    Delete the specified cluster from the kubeconfig
  delete-context    Delete the specified context from the kubeconfig
  delete-user       Delete the specified user from the kubeconfig
  get-clusters      Display clusters defined in the kubeconfig
  get-contexts      Describe one or many contexts
  get-users         Display users defined in the kubeconfig
  rename-context    Rename a context from the kubeconfig file
  set               Set an individual value in a kubeconfig file
  set-cluster       Set a cluster entry in kubeconfig
  set-context       Set a context entry in kubeconfig
  set-credentials   Set a user entry in kubeconfig
  unset             Unset an individual value in a kubeconfig file
  use-context       Set the current-context in a kubeconfig file
  view              Display merged kubeconfig settings or a specified kubeconfig file

Usage:
  kubectl config SUBCOMMAND [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl get-users

error: unknown command "get-users" for "kubectl"
jasdil@Jasdils-Air k8s % kubectl config get-users
NAME
docker-desktop
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl create deployment webserver2 --image=nginx:alpine
deployment.apps/webserver2 created

jasdil@Jasdils-Air k8s % kubectl get pods
NAME                        READY   STATUS    RESTARTS   AGE
pod1                        1/1     Running   0          43m
webserver                   1/1     Running   0          15m
webserver2-79676b6c-8gdvr   1/1     Running   0          7s
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/

Basic Commands (Beginner):
  create          Create a resource from a file or from stdin
  expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service
  run             Run a particular image on the cluster
  set             Set specific features on objects

Basic Commands (Intermediate):
  explain         Get documentation for a resource
  get             Display one or many resources
  edit            Edit a resource on the server
  delete          Delete resources by file names, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout         Manage the rollout of a resource
  scale           Set a new size for a deployment, replica set, or replication controller
  autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller

Cluster Management Commands:
  certificate     Modify certificate resources.
  cluster-info    Display cluster information
  top             Display resource (CPU/memory) usage
  cordon          Mark node as unschedulable
  uncordon        Mark node as schedulable
  drain           Drain node in preparation for maintenance
  taint           Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe        Show details of a specific resource or group of resources
  logs            Print the logs for a container in a pod
  attach          Attach to a running container
  exec            Execute a command in a container
  port-forward    Forward one or more local ports to a pod
  proxy           Run a proxy to the Kubernetes API server
  cp              Copy files and directories to and from containers
  auth            Inspect authorization
  debug           Create debugging sessions for troubleshooting workloads and nodes
  events          List events

Advanced Commands:
  diff            Diff the live version against a would-be applied version
  apply           Apply a configuration to a resource by file name or stdin
  patch           Update fields of a resource
  replace         Replace a resource by file name or stdin
  wait            Experimental: Wait for a specific condition on one or many resources
  kustomize       Build a kustomization target from a directory or URL.

Settings Commands:
  label           Update the labels on a resource
  annotate        Update the annotations on a resource
  completion      Output shell completion code for the specified shell (bash, zsh, fish, or powershell)

Other Commands:
  alpha           Commands for features in alpha
  api-resources   Print the supported API resources on the server
  api-versions    Print the supported API versions on the server, in the form of "group/version"
  config          Modify kubeconfig files
  plugin          Provides utilities for interacting with plugins
  version         Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).
jasdil@Jasdils-Air k8s %

Refer https://www.linuxsysadmins.com/service-unavailable-kubernetes-metrics/ to setup API metrics for top
kubectl edit deployments.apps -n kube-system metrics-server
# append
# the following two in container ags right after secure port
    - --kubelet-insecure-tls=true
    - --kubelet-preferred-address-types=InternalIP

# n then retry >>

jasdil@Jasdils-Air k8s % kubectl top pods
NAME                        CPU(cores)   MEMORY(bytes)
pod1                        0m           4Mi
webserver                   0m           4Mi
webserver2-79676b6c-8gdvr   0m           4Mi

jasdil@Jasdils-Air k8s % kubectl top nodes
NAME             CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%
docker-desktop   1788m        44%    2056Mi          53%
jasdil@Jasdils-Air k8s %

kubectl cordon webserver #<-- removes node from scheduling future requests, used for maintenance changes
kubectl drain webserver  #<-- terminates pods on the node and ctrl plane triggers creation of pod iwd newer IP on other nodes.
kubectl cordon webserver #<-- sets node active again for scheduling future requests

jasdil@Jasdils-Air k8s % kubectl scale --replicas=2 pod1
error: the server doesn't have a resource type "pod1"

jasdil@Jasdils-Air k8s % kubectl scale --replicas=2 pod pod1
Error from server (NotFound): the server could not find the requested resource

jasdil@Jasdils-Air k8s % kubectl scale --replicas=2 -f first.yaml
Error from server (NotFound): the server could not find the requested resource

jasdil@Jasdils-Air k8s % kubectl scale --replicas=2 deployment webserver2 #<-- happens for pod created with deployments only
deployment.apps/webserver2 scaled

jasdil@Jasdils-Air k8s % kubectl get pods
NAME                        READY   STATUS    RESTARTS   AGE
pod1                        1/1     Running   0          4h50m
webserver                   1/1     Running   0          4h22m
webserver2-79676b6c-8gdvr   1/1     Running   0          4h6m
webserver2-79676b6c-cjdh5   1/1     Running   0          9s
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl get namespace
NAME              STATUS   AGE
default           Active   5h5m
kube-node-lease   Active   5h5m
kube-public       Active   5h5m
kube-system       Active   5h5m
jasdil@Jasdils-Air k8s %



+++++++++++++++++++++++++++++
Dec 26: 5:30pm to 11pm -- All kubectl cmds, rolling deployments etc
Dec 27 morning onwards till end of week -- jenkins wid docker & kubernetes, including Ansible & Terraform
Jan 02 week -- Jenkins wid AWS + Docker + Kubernetes = 5 days
Jan 09 onwards -- 5:30pm to 11pm -- practice till Jan 31 on AWS+Ansible+Docker+K8s+Jenkins
+++++++++++++++++++++++++++++


==========================
NEW FROM HERE -- 12/26
==========================

Execute any of shell cmds frm outside the container n still get output frm inside the container

jasdil@Jasdils-Air docker_compose % kubectl exec webserver -- ls -l
total 72
drwxr-xr-x    2 root     root          4096 Nov 22 13:06 bin
drwxr-xr-x    5 root     root           360 Dec 27 04:47 dev
drwxr-xr-x    1 root     root          4096 Dec 14 01:20 docker-entrypoint.d
-rwxrwxr-x    1 root     root          1616 Dec 14 01:20 docker-entrypoint.sh
drwxr-xr-x    1 root     root          4096 Dec 27 04:47 etc
drwxr-xr-x    2 root     root          4096 Nov 22 13:06 home
drwxr-xr-x    1 root     root          4096 Dec 14 01:20 lib
drwxr-xr-x    5 root     root          4096 Nov 22 13:06 media
drwxr-xr-x    2 root     root          4096 Nov 22 13:06 mnt
drwxr-xr-x    2 root     root          4096 Nov 22 13:06 opt
dr-xr-xr-x  255 root     root             0 Dec 27 04:47 proc
drwx------    2 root     root          4096 Nov 22 13:06 root
drwxr-xr-x    1 root     root          4096 Dec 27 04:47 run
drwxr-xr-x    2 root     root          4096 Nov 22 13:06 sbin
drwxr-xr-x    2 root     root          4096 Nov 22 13:06 srv
dr-xr-xr-x   13 root     root             0 Dec 27 04:47 sys
drwxrwxrwt    1 root     root          4096 Dec 14 01:20 tmp
drwxr-xr-x    1 root     root          4096 Nov 22 13:06 usr
drwxr-xr-x    1 root     root          4096 Nov 22 13:06 var
jasdil@Jasdils-Air docker_compose %

jasdil@Jasdils-Air k8s % kubectl exec webserver -- df -h
Filesystem                Size      Used Available Use% Mounted on
overlay                  58.4G      4.2G     51.2G   8% /
tmpfs                    64.0M         0     64.0M   0% /dev
/dev/vda1                58.4G      4.2G     51.2G   8% /dev/termination-log
/dev/vda1                58.4G      4.2G     51.2G   8% /etc/resolv.conf
/dev/vda1                58.4G      4.2G     51.2G   8% /etc/hostname
/dev/vda1                58.4G      4.2G     51.2G   8% /etc/hosts
shm                      64.0M         0     64.0M   0% /dev/shm
tmpfs                     3.7G     12.0K      3.7G   0% /run/secrets/kubernetes.io/serviceaccount
tmpfs                     1.9G         0      1.9G   0% /proc/acpi
tmpfs                    64.0M         0     64.0M   0% /proc/kcore
tmpfs                    64.0M         0     64.0M   0% /proc/keys
tmpfs                    64.0M         0     64.0M   0% /proc/timer_list
tmpfs                     1.9G         0      1.9G   0% /sys/firmware
jasdil@Jasdils-Air k8s %

We can filter events based on specific pod or Event type, if thr r lot of events to scan through

jasdil@Jasdils-Air docker_compose % kubectl events --for Pod/webserver
LAST SEEN   TYPE     REASON      OBJECT          MESSAGE
41m         Normal   Scheduled   Pod/webserver   Successfully assigned default/webserver to docker-desktop
41m         Normal   Pulled      Pod/webserver   Container image "nginx:alpine" already present on machine
41m         Normal   Created     Pod/webserver   Created container webserver
41m         Normal   Started     Pod/webserver   Started container webserver

jasdil@Jasdils-Air docker_compose % kubectl events --for Pod/webserver --types=Normal
LAST SEEN   TYPE     REASON      OBJECT          MESSAGE
42m         Normal   Scheduled   Pod/webserver   Successfully assigned default/webserver to docker-desktop
42m         Normal   Pulled      Pod/webserver   Container image "nginx:alpine" already present on machine
42m         Normal   Created     Pod/webserver   Created container webserver
42m         Normal   Started     Pod/webserver   Started container webserver
jasdil@Jasdils-Air docker_compose %


URL: https://iximiuz.com/en/posts/containers-101-attach-vs-exec/

chk whts the use of debug and attach in kubectl
what the use of debug mode in OS, password change etc can be done

Whats the benefit of logging into container's running shell vs new shell, try to google about it.

kubectl attach <podName> -i #<-- logs u in same running shell, avoids creating another shell
kubectl exec -ti <nodeName> -- /bin/bash #<-- logs u in by creating a new shell


jasdil@Jasdils-Air k8s % kubectl run -ti webserver1 --image=centos --restart=Never -- /bin/bash
If you don't see a command prompt, try pressing enter.


[root@webserver1 /]# shell
bash: shell: command not found

[root@webserver1 /]# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 14:54 pts/0    00:00:00 /bin/bash
root        16     1  0 14:54 pts/0    00:00:00 ps -ef
[root@webserver1 /]# exit


jasdil@Jasdils-Air k8s % kubectl attach webserver1 -i
error: cannot attach a container in a completed pod; current phase is Succeeded

jasdil@Jasdils-Air k8s % kubectl get pods
NAME         READY   STATUS      RESTARTS   AGE
webserver    1/1     Running     0          7h5m
webserver1   0/1     Completed   0          78s

jasdil@Jasdils-Air k8s % kubectl run -ti webserver2 --image=centos -- /bin/bash
If you don't see a command prompt, try pressing enter.


[root@webserver2 /]# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 14:56 pts/0    00:00:00 /bin/bash
root        15     1  0 14:56 pts/0    00:00:00 ps -ef

[root@webserver2 /]# exit
Session ended, resume using 'kubectl attach webserver2 -c webserver2 -i -t' command when the pod is running


jasdil@Jasdils-Air k8s % kubectl attach webserver2 -i
If you don't see a command prompt, try pressing enter.


[root@webserver2 /]# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 14:56 pts/0    00:00:00 /bin/bash
root        15     1  0 14:56 pts/0    00:00:00 ps -ef

[root@webserver2 /]# exit
Session ended, resume using 'kubectl attach webserver2 -c webserver2 -i -t' command when the pod is running


jasdil@Jasdils-Air k8s % kubectl exec -ti webserver2 -- /bin/bash


[root@webserver2 /]# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 14:56 pts/0    00:00:00 /bin/bash
root        16     0  0 14:58 pts/1    00:00:00 /bin/bash
root        30    16  0 14:58 pts/1    00:00:00 ps -ef
[root@webserver2 /]# exit


jasdil@Jasdils-Air k8s % kubectl attach webserver2 -i
If you don't see a command prompt, try pressing enter.


[root@webserver2 /]# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 14:56 pts/0    00:00:00 /bin/bash
root        31     1  0 14:58 pts/0    00:00:00 ps -ef
[root@webserver2 /]# exit

Session ended, resume using 'kubectl attach webserver2 -c webserver2 -i -t' command when the pod is running
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl attach webserver2 -c webserver2 -it
If you don't see a command prompt, try pressing enter.


[root@webserver2 /]# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  0 14:58 pts/0    00:00:00 /bin/bash
root        15     1  0 15:00 pts/0    00:00:00 ps -ef
[root@webserver2 /]# exit


Session ended, resume using 'kubectl attach webserver2 -c webserver2 -i -t' command when the pod is running
jasdil@Jasdils-Air k8s %


# Namespace helps isolate setup based on Environments, apps or BUs
jasdil@Jasdils-Air k8s % cat namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: jas
  labels:
    name: production
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl get namespaces --show-labels
NAME              STATUS   AGE   LABELS
default           Active   23h   kubernetes.io/metadata.name=default
kube-node-lease   Active   23h   kubernetes.io/metadata.name=kube-node-lease
kube-public       Active   23h   kubernetes.io/metadata.name=kube-public
kube-system       Active   23h   kubernetes.io/metadata.name=kube-system

jasdil@Jasdils-Air k8s % kubectl create -f namespace.yaml
namespace/jas created

jasdil@Jasdils-Air k8s % kubectl get namespaces --show-labels
NAME              STATUS   AGE   LABELS
default           Active   23h   kubernetes.io/metadata.name=default
jas               Active   5s    kubernetes.io/metadata.name=jas,name=production
kube-node-lease   Active   23h   kubernetes.io/metadata.name=kube-node-lease
kube-public       Active   23h   kubernetes.io/metadata.name=kube-public
kube-system       Active   23h   kubernetes.io/metadata.name=kube-system

# u can create namespace directly as well -->
jasdil@Jasdils-Air k8s % kubectl create namespace qa
namespace/qa created

jasdil@Jasdils-Air k8s % kubectl get namespaces --show-labels
NAME              STATUS   AGE     LABELS
default           Active   24h     kubernetes.io/metadata.name=default
jas               Active   3m25s   kubernetes.io/metadata.name=jas,name=production
kube-node-lease   Active   24h     kubernetes.io/metadata.name=kube-node-lease
kube-public       Active   24h     kubernetes.io/metadata.name=kube-public
kube-system       Active   24h     kubernetes.io/metadata.name=kube-system
qa                Active   10s     kubernetes.io/metadata.name=qa
jasdil@Jasdils-Air k8s %

# How to switch between namespaces -->
jasdil@Jasdils-Air k8s % kubectl config set-context --current --namespace=jas
Context "docker-desktop" modified.

jasdil@Jasdils-Air k8s % kubectl events
No events found in jas namespace.
jasdil@Jasdils-Air k8s %

jasdil@Jasdils-Air k8s % kubectl run -ti webserver --image=centos -- /bin/bash
If you don't see a command prompt, try pressing enter.


[root@webserver /]# ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         1     0  1 15:24 pts/0    00:00:00 /bin/bash
root        15     1  0 15:24 pts/0    00:00:00 ps -ef
[root@webserver /]# exit
exit
Session ended, resume using 'kubectl attach webserver -c webserver -i -t' command when the pod is running


jasdil@Jasdils-Air k8s % kubectl events
LAST SEEN          TYPE     REASON      OBJECT          MESSAGE
11s                Normal   Scheduled   Pod/webserver   Successfully assigned jas/webserver to docker-desktop
9s                 Normal   Pulled      Pod/webserver   Successfully pulled image "centos" in 985.409833ms
1s (x2 over 10s)   Normal   Pulling     Pod/webserver   Pulling image "centos"
1s                 Normal   Pulled      Pod/webserver   Successfully pulled image "centos" in 899.281088ms
0s (x2 over 9s)    Normal   Created     Pod/webserver   Created container webserver
0s (x2 over 9s)    Normal   Started     Pod/webserver   Started container webserver
jasdil@Jasdils-Air k8s %

# Check pods in other namespace without switching to it.
# can execute any of cmds for other namespace without switching to it
jasdil@Jasdils-Air k8s % kubectl get pods -o wide
NAME        READY   STATUS    RESTARTS      AGE   IP          NODE             NOMINATED NODE   READINESS GATES
webserver   1/1     Running   1 (38s ago)   47s   10.1.0.26   docker-desktop   <none>           <none>

jasdil@Jasdils-Air k8s % kubectl get pods --namespace=default -o wide
NAME         READY   STATUS      RESTARTS      AGE     IP          NODE             NOMINATED NODE   READINESS GATES
webserver    1/1     Running     0             7h36m   10.1.0.20   docker-desktop   <none>           <none>
webserver1   0/1     Completed   0             31m     10.1.0.24   docker-desktop   <none>           <none>
webserver2   1/1     Running     4 (25m ago)   30m     10.1.0.25   docker-desktop   <none>           <none>
jasdil@Jasdils-Air k8s %

# Add a new label
jasdil@Jasdils-Air k8s % kubectl label pods webserver type=frontend
pod/webserver labeled

jasdil@Jasdils-Air k8s % kubectl get pods --show-labels
NAME        READY   STATUS    RESTARTS        AGE     LABELS
webserver   1/1     Running   1 (4m34s ago)   4m43s   run=webserver,type=frontend
jasdil@Jasdils-Air k8s %

# How to remove a label
jasdil@Jasdils-Air k8s % kubectl label pods webserver test=forRemoval
pod/webserver labeled

jasdil@Jasdils-Air k8s % kubectl get pods --show-labels
NAME        READY   STATUS    RESTARTS        AGE     LABELS
webserver   1/1     Running   1 (5m43s ago)   5m52s   run=webserver,test=forRemoval,type=frontend

jasdil@Jasdils-Air k8s % kubectl label pods webserver test-
pod/webserver unlabeled

jasdil@Jasdils-Air k8s % kubectl get pods --show-labels
NAME        READY   STATUS    RESTARTS        AGE    LABELS
webserver   1/1     Running   1 (5m55s ago)   6m4s   run=webserver,type=frontend
jasdil@Jasdils-Air k8s %

# Filter results based on labels -->
jasdil@Jasdils-Air k8s % kubectl get pods --selector type=frontend
NAME        READY   STATUS    RESTARTS       AGE
webserver   1/1     Running   1 (7m4s ago)   7m13s
jasdil@Jasdils-Air k8s %

# Get all lists all components output like for pods, svcs, deployments n replicasets
jasdil@Jasdils-Air k8s % kubectl get all
NAME             READY   STATUS      RESTARTS      AGE
pod/webserver    1/1     Running     0             7h45m
pod/webserver1   0/1     Completed   0             41m
pod/webserver2   1/1     Running     4 (35m ago)   39m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   24h

NAME                         READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/webserver2   0/0     0            0           23h

NAME                                  DESIRED   CURRENT   READY   AGE
replicaset.apps/webserver2-79676b6c   0         0         0       23h
jasdil@Jasdils-Air k8s %

kubectl attach
kubectl taint
kubectl port-forward
kubectl diff
kubectl volume
kubectl replace
kubectl expose
kubectl rollout, update, set, autoscale, patch
